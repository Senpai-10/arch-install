#!/bin/bash

if [ "$(id -u)" != "0" ]; then
  echo "This script must be run as root" 1>&2
  exit 1
fi

printf '\033c'
echo -e "\tArch install script"
echo "author: senpai-10 | https://github.com/Senpai-10/"

echo "Selecting the fastest mirrors"
# reflector --latest 30 --sort rate --save /etc/pacman.d/mirrorlist --protocol https --download-timeout 5
sed -i "/\[multilib\]/,/Include/"'s/^#//' /etc/pacman.conf
sed -i "s/^#ParallelDownloads = 5$/ParallelDownloads = 15/" /etc/pacman.conf

pacman -Sy
pacman --noconfirm -Sy archlinux-keyring dialog

loadkeys us
timedatectl set-ntp true

read -p "partitioning [mbr, gpt]: " partitioning

lsblk
read -p "Enter the drive: " drive
if [ "$partitioning" == "mbr" ]; then
  # bios/mbr
  echo "o
n
p
1

+4GB
t
82
p
n
p
2


w" | fdisk /dev/$drive
elif [ "$partitioning" == "gpt" ]; then
  # uefi
  echo "This option does not work for now!"
  exit
else
  echo "${partitioning} is not a vaild option! (uefi, mbr)"
  exit
fi

mkswap /dev/${drive}1
swapon /dev/${drive}1

mkfs.ext4 /dev/${drive}2
mount /dev/${drive}2 /mnt

pacstrap /mnt base base-devel linux linux-firmware neovim
genfstab -U /mnt >> /mnt/etc/fstab

echo -e "drive=$drive\n" > /mnt/arch-install-2
sed '1,/^#part2$/d' arch-install >> /mnt/arch-install-2
chmod +x /mnt/arch-install-2
arch-chroot /mnt ./arch-install-2
exit

#part2
printf '\033c'
pacman -S --noconfirm sed git dialog
sed -i "s/^#ParallelDownloads = 5$/ParallelDownloads = 15/" /etc/pacman.conf
sed -i "/\[multilib\]/,/Include/"'s/^#//' /etc/pacman.conf
ln -sf /usr/share/zoneinfo/Asia/Riyadh /etc/localtime
hwclock --systohc
echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
locale-gen
echo "LANG=en_US.UTF-8" > /etc/locale.conf
read -p "hostname: " hostname
echo $hostname > /etc/hostname
echo "127.0.0.1       localhost" >> /etc/hosts
echo "::1             localhost" >> /etc/hosts
echo "127.0.1.1       $hostname.localdomain $hostname" >> /etc/hosts
echo "root password"
passwd
pacman --noconfirm -S grub networkmanager network-manager-applet \
  wireless_tools wpa_supplicant os-prober mtools dosfstools \
  base-devel linux-headers
grub-install --target=i386-pc /dev/$drive
grub-mkconfig -o /boot/grub/grub.cfg
pacman -S --noconfirm xorg-xwud \
    xorg-xwininfo xorg-xwd xorg-xvinfo xorg-xset \
    xorg-xrefresh xorg-xrdb ttf-fantasque-sans-mono \
    ttf-fira-code ttf-liberation virt-manager virt-viewer wget \
    xbindkeys xorg-bdftopcf xorg-docs xorg-font-util \
    xorg-fonts-100dpi xorg-fonts-75dpi \
    xorg-fonts-encodings xorg-iceauth xorg-mkfontscale \
    xorg-server xorg-server-common xorg-server-devel \
    xorg-server-xephyr xorg-server-xnest xorg-server-xvfb \
    xorg-sessreg xorg-setxkbmap xorg-smproxy xorg-x11perf \
    xorg-xauth xorg-xbacklight xorg-xcmsdb xorg-xcursorgen \
    xorg-xdpyinfo xorg-xdriinfo xorg-xev xorg-xgamma \
    xorg-xhost xorg-xinput xorg-xkbcomp \
    xorg-xpr xorg-xrandr alacritty alsa-tools alsa-utils atom \
    bashtop bat bc bitwarden \
    bitwarden-cli bspwm cmus code discord \
    dmenu dnsmasq docker easytag emacs \
    fd feh fff ffmpegthumbnailer ffmpegthumbs \
    flameshot gimp gnome-calculator \
    gnome-system-monitor highlight htop \
    imwheel jgmenu kitty kmix \
    lib32-libpulse libguestfs libpng12 libvirt \
    lxappearance lxappearance-obconf menumaker nautilus nemo neofetch \
    nitrogen nnn nodejs npm obconf onboard openbox \
    pavucontrol pulseaudio pulseaudio-alsa \
    pulseaudio-equalizer pulseaudio-jack \
    python-setuptools qemu qemu-arch-extra redis \
    reflector rofi rxvt-unicode scrot sdl_image steam \
    terminus-font tree ttf-dejavu ttf-droid \
    xorg-xkbevd xorg-xkbutils xorg-xlsatoms \
    xorg-xlsclients xorg-xmodmap xorg-xinit xorg-xkill \
    xorg-xsetroot xorg-xprop noto-fonts noto-fonts-emoji \
    noto-fonts-cjk ttf-jetbrains-mono ttf-joypixels ttf-font-awesome \
    sxiv mpv zathura zathura-pdf-mupdf ffmpeg imagemagick  \
    fzf man-db python-pywal youtube-dl xclip maim \
    zip unzip unrar p7zip xdotool papirus-icon-theme  \
    ntfs-3g sxhkd zsh \
    arc-gtk-theme rsync firefox dash \
    slock jq dhcpcd pamixer which yarn yad vivaldi
systemctl enable NetworkManager.service
chsh -s $(which zsh)
# echo "%wheel ALL=(ALL) ALL" >> /etc/sudoers
echo "%wheel ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers # remove later from sudoers file! and add "%wheel ALL=(ALL) ALL"
read -p "Enter Username: " username
useradd -m -G wheel $username
passwd $username
echo "pre-Installation Finish Reboot now"
arch_install_3_path=/home/$username/arch-install-3
sed '1,/^#part3$/d' arch-install-2 > $arch_install_3_path
chown $username:$username $arch_install_3_path
chmod +x $arch_install_3_path
echo "source $arch_install_3_path" >> /home/$username/.bash_profile
echo "source $arch_install_3_path" >> /home/$username/.zsh_profile
clear
printf "\033[0;31mREMOVE INSTALLATION MEDIUM AND REBOOT\033[0m"
# su -c $arch_install_3_path -s /bin/sh $username
exit

#part3
printf '\033c'
cd $HOME
# clone dotfiles and rename to .dotfiles 
# remove old arch script and use it just for backups and copying dotfiles 
sed -i '/arch/d' .bash_profile
sed -i '/arch/d' .zsh_profile
chsh -s $(which zsh)
git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si && cd ..
yay -S alacritty-themes
yay -S brave-bin
yay -S btops-git
yay -S cava-git
yay -S code-marketplace
yay -S colorpicker
yay -S compton-conf-git
yay -S consolas-font
yay -S deadd-notification-center-bin
yay -S discord-qt-appimage
yay -S dxhd-bin
yay -S figma-linux
yay -S fontpreview-ueberzug-git
yay -S google-chrome
yay -S lf-bin
yay -S ls-icons
yay -S lxqt-build-tools-git
yay -S mongodb-bin
yay -S mongodb-tools-bin
yay -S mongosh-bin
yay -S nerd-fonts-complete
yay -S noto-fonts-sc
yay -S otf-symbola
yay -S picom-ibhagwan-git
yay -S polybar
yay -S selectdefaultapplication-git
yay -S spacefm
yay -S spaceship-prompt-git
yay -S spotify
yay -S ttf-icomoon-feather
yay -S ttf-material-icons-git
yay -S ttf-ms-fonts
yay -s pnpm

echo "Remove all installation files!"
rm /arch-install-2
rm ~/arch-install-3
exit
